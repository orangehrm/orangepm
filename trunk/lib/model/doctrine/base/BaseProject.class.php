<?php

/**
 * BaseProject
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $name
 * @property boolean $deleted
 * @property integer $adminId
 * @property User $User
 * @property Doctrine_Collection $Story
 * 
 * @method integer             getId()      Returns the current record's "id" value
 * @method string              getName()    Returns the current record's "name" value
 * @method boolean             getDeleted() Returns the current record's "deleted" value
 * @method integer             getAdminId() Returns the current record's "adminId" value
 * @method User                getUser()    Returns the current record's "User" value
 * @method Doctrine_Collection getStory()   Returns the current record's "Story" collection
 * @method Project             setId()      Sets the current record's "id" value
 * @method Project             setName()    Sets the current record's "name" value
 * @method Project             setDeleted() Sets the current record's "deleted" value
 * @method Project             setAdminId() Sets the current record's "adminId" value
 * @method Project             setUser()    Sets the current record's "User" value
 * @method Project             setStory()   Sets the current record's "Story" collection
 * 
 * @package    orangepm
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7691 2011-02-04 15:43:29Z jwage $
 */
abstract class BaseProject extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('orangepm_project');
        $this->hasColumn('id', 'integer', null, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => true,
             ));
        $this->hasColumn('name', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('deleted', 'boolean', null, array(
             'type' => 'boolean',
             'notnull' => true,
             'default' => 1,
             ));
        $this->hasColumn('admin_id as adminId', 'integer', null, array(
             'type' => 'integer',
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('User', array(
             'local' => 'adminId',
             'foreign' => 'id'));

        $this->hasMany('Story', array(
             'local' => 'id',
             'foreign' => 'project_id'));

        $timestampable0 = new Doctrine_Template_Timestampable(array(
             ));
        $this->actAs($timestampable0);
    }
}