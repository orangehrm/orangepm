<?php

/**
 * BaseUser
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $firstName
 * @property string $lastName
 * @property string $email
 * @property boolean $isActive
 * @property string $username
 * @property integer $userType
 * @property string $password
 * @property Doctrine_Collection $Project
 * @property Doctrine_Collection $ProjectUser
 * @property Doctrine_Collection $ProjectLogs
 * 
 * @method integer             getId()          Returns the current record's "id" value
 * @method string              getFirstName()   Returns the current record's "firstName" value
 * @method string              getLastName()    Returns the current record's "lastName" value
 * @method string              getEmail()       Returns the current record's "email" value
 * @method boolean             getIsActive()    Returns the current record's "isActive" value
 * @method string              getUsername()    Returns the current record's "username" value
 * @method integer             getUserType()    Returns the current record's "userType" value
 * @method string              getPassword()    Returns the current record's "password" value
 * @method Doctrine_Collection getProject()     Returns the current record's "Project" collection
 * @method Doctrine_Collection getProjectUser() Returns the current record's "ProjectUser" collection
 * @method Doctrine_Collection getProjectLogs() Returns the current record's "ProjectLogs" collection
 * @method User                setId()          Sets the current record's "id" value
 * @method User                setFirstName()   Sets the current record's "firstName" value
 * @method User                setLastName()    Sets the current record's "lastName" value
 * @method User                setEmail()       Sets the current record's "email" value
 * @method User                setIsActive()    Sets the current record's "isActive" value
 * @method User                setUsername()    Sets the current record's "username" value
 * @method User                setUserType()    Sets the current record's "userType" value
 * @method User                setPassword()    Sets the current record's "password" value
 * @method User                setProject()     Sets the current record's "Project" collection
 * @method User                setProjectUser() Sets the current record's "ProjectUser" collection
 * @method User                setProjectLogs() Sets the current record's "ProjectLogs" collection
 * 
 * @package    orangepm
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7691 2011-02-04 15:43:29Z jwage $
 */
abstract class BaseUser extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('orangepm_user');
        $this->hasColumn('id', 'integer', null, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => true,
             ));
        $this->hasColumn('first_name as firstName', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 255,
             ));
        $this->hasColumn('last_name as lastName', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 255,
             ));
        $this->hasColumn('email', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('is_active as isActive', 'boolean', null, array(
             'type' => 'boolean',
             'notnull' => true,
             'default' => 1,
             ));
        $this->hasColumn('username', 'string', 255, array(
             'type' => 'string',
             'unique' => true,
             'notnull' => true,
             'length' => 255,
             ));
        $this->hasColumn('user_type as userType', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('password', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 255,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasMany('Project', array(
             'local' => 'id',
             'foreign' => 'userId'));

        $this->hasMany('ProjectUser', array(
             'local' => 'id',
             'foreign' => 'user_id'));

        $this->hasMany('ProjectLog as ProjectLogs', array(
             'local' => 'id',
             'foreign' => 'added_by'));
    }
}