<?php

/**
 * BaseProjectProgress
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $project_id
 * @property date $accepted_date
 * @property integer $work_completed
 * @property integer $unit_of_work
 * 
 * @method integer         getProjectId()      Returns the current record's "project_id" value
 * @method date            getAcceptedDate()   Returns the current record's "accepted_date" value
 * @method integer         getWorkCompleted()  Returns the current record's "work_completed" value
 * @method integer         getUnitOfWork()     Returns the current record's "unit_of_work" value
 * @method ProjectProgress setProjectId()      Sets the current record's "project_id" value
 * @method ProjectProgress setAcceptedDate()   Sets the current record's "accepted_date" value
 * @method ProjectProgress setWorkCompleted()  Sets the current record's "work_completed" value
 * @method ProjectProgress setUnitOfWork()     Sets the current record's "unit_of_work" value
 * 
 * @package    orangepm
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7691 2011-02-04 15:43:29Z jwage $
 */
abstract class BaseProjectProgress extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('orangepm_project_progress');
        $this->hasColumn('project_id', 'integer', null, array(
             'type' => 'integer',
             'primary' => true,
             ));
        $this->hasColumn('accepted_date', 'date', null, array(
             'type' => 'date',
             'primary' => true,
             ));
        $this->hasColumn('work_completed', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('unit_of_work', 'integer', null, array(
             'type' => 'integer',
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $timestampable0 = new Doctrine_Template_Timestampable(array(
             ));
        $this->actAs($timestampable0);
    }
}